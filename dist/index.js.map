{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/factory.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar erfc = require( '@stdlib/math-base-special-erfc' );\nvar sqrt = require( '@stdlib/math-base-special-sqrt' );\nvar NINF = require( '@stdlib/constants-float64-ninf' );\nvar ln = require( '@stdlib/math-base-special-ln' );\n\n\n// MAIN //\n\n/**\n* Evaluates the logarithm of the cumulative distribution function (CDF) for a L\u00E9vy distribution with location parameter `mu` and scale parameter `c` at value `x`.\n*\n* @param {number} x - input value\n* @param {number} mu - location parameter\n* @param {PositiveNumber} c - scale parameter\n* @returns {number} evaluated logCDF\n*\n* @example\n* var y = logcdf( 2.0, 0.0, 1.0 );\n* // returns ~-0.735\n*\n* @example\n* var y = logcdf( 12.0, 10.0, 3.0 );\n* // returns ~-1.51\n*\n* @example\n* var y = logcdf( 9.0, 10.0, 3.0 );\n* // returns -Infinity\n*\n* @example\n* var y = logcdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = logcdf( 2, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = logcdf( 2.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative scale parameter:\n* var y = logcdf( 2.0, 0.0, -1.0 );\n* // returns NaN\n*/\nfunction logcdf( x, mu, c ) {\n\tvar z;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( mu ) ||\n\t\tisnan( c ) ||\n\t\tc <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x < mu ) {\n\t\treturn NINF;\n\t}\n\tz = sqrt( c / ( 2.0 * ( x-mu ) ) );\n\treturn ln( erfc( z ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = logcdf;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils-constant-function' );\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar erfc = require( '@stdlib/math-base-special-erfc' );\nvar sqrt = require( '@stdlib/math-base-special-sqrt' );\nvar ln = require( '@stdlib/math-base-special-ln' );\nvar NINF = require( '@stdlib/constants-float64-ninf' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the logarithm of the cumulative distribution function (CDF) for a L\u00E9vy distribution with location parameter `mu` and scale parameter `c`.\n*\n* @param {number} mu - location parameter\n* @param {PositiveNumber} c - scale parameter\n* @returns {Function} logCDF\n*\n* @example\n* var logcdf = factory( 3.0, 1.5 );\n*\n* var y = logcdf( 4.0 );\n* // returns ~-1.511\n*\n* y = logcdf( 2.0 );\n* // returns -Infinity\n*/\nfunction factory( mu, c ) {\n\tif (\n\t\tisnan( mu ) ||\n\t\tisnan( c ) ||\n\t\tc <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn logcdf;\n\n\t/**\n\t* Evaluates the logarithm of the cumulative distribution function (CDF) for a L\u00E9vy distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated logCDF\n\t*\n\t* @example\n\t* var y = logcdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction logcdf( x ) {\n\t\tvar z;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < mu ) {\n\t\t\treturn NINF;\n\t\t}\n\t\tz = sqrt( c / ( 2.0 * ( x-mu ) ) );\n\t\treturn ln( erfc( z ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* L\u00E9vy distribution logarithm of cumulative distribution function (CDF).\n*\n* @module @stdlib/stats-base-dists-levy-logcdf\n*\n* @example\n* var logcdf = require( '@stdlib/stats-base-dists-levy-logcdf' );\n*\n* var y = logcdf( 10.0, 0.0, 3.0 );\n* // returns ~-0.538\n*\n* y = logcdf( 0.3, 0.0, 3.0 );\n* // returns ~-6.460\n*\n* @example\n* var factory = require( '@stdlib/stats-base-dists-levy-logcdf' ).factory;\n*\n* var mylogcdf = factory( 2.0, 3.0 );\n* var y = mylogcdf( 100.0 );\n* // returns ~-0.15\n*\n* y = mylogcdf( 10.0 );\n* // returns ~-0.616\n*\n* y = mylogcdf( 2.0 );\n* // returns -Infinity\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAQ,QAAS,iCAAkC,EACnDC,EAAO,QAAS,gCAAiC,EACjDC,EAAO,QAAS,gCAAiC,EACjDC,EAAO,QAAS,gCAAiC,EACjDC,EAAK,QAAS,8BAA+B,EA0CjD,SAASC,EAAQC,EAAGC,EAAIC,EAAI,CAC3B,IAAIC,EACJ,OACCT,EAAOM,CAAE,GACTN,EAAOO,CAAG,GACVP,EAAOQ,CAAE,GACTA,GAAK,EAEE,IAEHF,EAAIC,EACDJ,GAERM,EAAIP,EAAMM,GAAM,GAAQF,EAAEC,GAAO,EAC1BH,EAAIH,EAAMQ,CAAE,CAAE,EACtB,CAKAV,EAAO,QAAUM,ICxFjB,IAAAK,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAmB,QAAS,iCAAkC,EAC9DC,EAAQ,QAAS,iCAAkC,EACnDC,EAAO,QAAS,gCAAiC,EACjDC,EAAO,QAAS,gCAAiC,EACjDC,EAAK,QAAS,8BAA+B,EAC7CC,EAAO,QAAS,gCAAiC,EAqBrD,SAASC,EAASC,EAAIC,EAAI,CACzB,GACCP,EAAOM,CAAG,GACVN,EAAOO,CAAE,GACTA,GAAK,EAEL,OAAOR,EAAkB,GAAI,EAE9B,OAAOS,EAaP,SAASA,EAAQC,EAAI,CACpB,IAAIC,EACJ,OAAKV,EAAOS,CAAE,EACN,IAEHA,EAAIH,EACDF,GAERM,EAAIR,EAAMK,GAAM,GAAQE,EAAEH,GAAO,EAC1BH,EAAIF,EAAMS,CAAE,CAAE,EACtB,CACD,CAKAZ,EAAO,QAAUO,ICnCjB,IAAIM,EAAc,QAAS,uDAAwD,EAC/EC,EAAO,IACPC,EAAU,IAKdF,EAAaC,EAAM,UAAWC,CAAQ,EAKtC,OAAO,QAAUD",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isnan", "erfc", "sqrt", "NINF", "ln", "logcdf", "x", "mu", "c", "z", "require_factory", "__commonJSMin", "exports", "module", "constantFunction", "isnan", "erfc", "sqrt", "ln", "NINF", "factory", "mu", "c", "logcdf", "x", "z", "setReadOnly", "main", "factory"]
}
